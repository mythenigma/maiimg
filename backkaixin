<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="keywords" content="image hosting,image upload,photo sharing,image qr code,free image host,secure image sharing">
  <meta name="description" content="Upload and share images instantly with QR codes. Secure, fast, and free image hosting service with tracking and analytics.">
  <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>📸</text></svg>" type="image/svg+xml">
  <meta name="author" content="MaiPDF">
  <title>Image QR Generator - Upload & Share Images with QR Codes</title>

  <!-- Cloudflare CDN Resources -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/dropzone.min.css" rel="stylesheet">
  
  <!-- Custom Styles -->
  <link href="qr-styles.css" rel="stylesheet">
  
  <!-- Internationalization -->
  <script src="i18n.js"></script>
</head>

<body>
  <!-- Navigation -->
  <nav class="navbar navbar-expand-lg fixed-top">
    <div class="container">
      <a class="navbar-brand" href="#hero">
        <i class="fas fa-images me-2"></i><span data-translate="nav.title">Image QR Generator</span>
      </a>
      
      <!-- Language Selector -->
      <div class="language-selector">
        <div class="dropdown">
          <button class="btn btn-outline-light btn-sm dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
            <span id="currentLanguageFlag">🇺🇸</span>
            <span id="currentLanguageName" data-translate="language.english">English</span>
          </button>
          <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="languageDropdown">
            <li>
              <a class="dropdown-item" href="#" onclick="changeLanguage('en')">
                <span class="flag-icon">🇺🇸</span>
                <span data-translate="language.english">English</span>
              </a>
            </li>
            <li>
              <a class="dropdown-item" href="#" onclick="changeLanguage('zh')">
                <span class="flag-icon">🇨🇳</span>
                <span data-translate="language.chinese">中文</span>
              </a>
            </li>
            <li>
              <a class="dropdown-item" href="#" onclick="changeLanguage('tw')">
                <span class="flag-icon">🇹🇼</span>
                <span data-translate="language.taiwan">中華民國</span>
              </a>
            </li>
            <li>
              <a class="dropdown-item" href="#" onclick="changeLanguage('ja')">
                <span class="flag-icon">🇯🇵</span>
                <span data-translate="language.japanese">日本語</span>
              </a>
            </li>
            <li>
              <a class="dropdown-item" href="#" onclick="changeLanguage('de')">
                <span class="flag-icon">🇩🇪</span>
                <span data-translate="language.german">Deutsch</span>
              </a>
            </li>
            <li>
              <a class="dropdown-item" href="#" onclick="changeLanguage('ko')">
                <span class="flag-icon">🇰🇷</span>
                <span data-translate="language.korean">한국어</span>
              </a>
            </li>
            <li>
              <a class="dropdown-item" href="#" onclick="changeLanguage('fr')">
                <span class="flag-icon">🇫🇷</span>
                <span data-translate="language.french">Français</span>
              </a>
            </li>
            <li>
              <a class="dropdown-item" href="#" onclick="changeLanguage('it')">
                <span class="flag-icon">🇮🇹</span>
                <span data-translate="language.italian">Italiano</span>
              </a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </nav>

  <!-- Hero Section -->
  <section class="hero-section" id="hero">
    <div class="container">
      <h1 class="hero-title">
        <i class="fas fa-cloud-upload-alt"></i><br>
        <span data-translate="hero.title">Upload & Share Images</span>
      </h1>
      <p class="hero-subtitle" data-translate="hero.subtitle">
        Turn your images into shareable QR codes with advanced tracking and analytics
      </p>
    </div>
  </section>

  <div class="container">
    <!-- Main Upload Section -->
    <section class="main-upload-section" id="upload">
      <div class="text-center mb-4">
        <h2 class="section-title" data-translate="upload.title">Image Upload Center</h2>
        <p class="section-subtitle" data-translate="upload.subtitle">Drag & drop your images or click to browse</p>
        
        <!-- Feature Badges -->
        <div class="feature-badges mb-4">
          <span class="badge badge-secure">
            <i class="fas fa-shield-alt"></i>
            <span data-translate="badges.secure">Secure</span>
          </span>
          <span class="badge badge-fast">
            <i class="fas fa-bolt"></i>
            <span data-translate="badges.fast">Fast</span>
          </span>
          <span class="badge badge-free">
            <i class="fas fa-gift"></i>
            <span data-translate="badges.free">Free</span>
          </span>
        </div>
      </div>

      <!-- Upload Zone -->
      <div class="upload-area" id="dropz">
        <i class="fas fa-cloud-upload-alt upload-icon"></i>
        <div class="upload-text" data-translate="upload.dropText">Drop images here or click to upload</div>
        <div class="upload-subtext" data-translate="upload.supportText">
          Supports: PNG, JPG, JPEG, GIF, WebP • Max 50MB each • Up to 9 files
        </div>
        <div class="mt-3">
          <span class="badge bg-primary px-3 py-2">
            <span data-translate="badges.secure">Secure</span>
          </span>
          <span class="badge bg-success px-3 py-2">
            <span data-translate="badges.fast">Fast</span>
          </span>
          <span class="badge bg-info px-3 py-2">
            <span data-translate="badges.free">Free</span>
          </span>
        </div>
      </div>

      <div class="row">
        <div class="col-12 mb-4">
          <div class="alert alert-info border-0 rounded-4" id="uploadStatus">
            <i class="fas fa-info-circle me-2"></i>
            <span id="pleaseupload" data-translate="upload.ready">Ready to upload images</span>
          </div>
        </div>
      </div>

      <!-- File Preview Area -->
      <div class="file-preview-area" id="filePreviewArea" style="display: none;">
        <h4>Selected Images</h4>
        <div class="file-grid" id="fileGrid"></div>
      </div>
    </section>

    <!-- Configuration Section -->
    <section class="config-section" id="config">
      <div class="row">
        <div class="col-12 mb-4">
          <div class="alert alert-info border-0 rounded-4" id="uploadStatus">
            <i class="fas fa-info-circle me-2"></i>
            <span id="pleaseupload" data-translate="upload.ready">Ready to upload images</span>
          </div>
        </div>
      </div>

      <div class="feature-cards">
        <div class="feature-card">
          <i class="fas fa-eye feature-icon"></i>
          <h5 class="feature-title" data-translate="features.viewLimit.title">View Limit</h5>
          <input class="form-control" type="number" id="limit" data-translate-placeholder="features.viewLimit.placeholder" placeholder="Max views (required)" min="1" max="99999999" required>
          <small class="text-muted" data-translate="features.viewLimit.description">Enter max number of views</small>
        </div>
        
        <div class="feature-card">
          <i class="fas fa-clock feature-icon"></i>
          <h5 class="feature-title" data-translate="features.timeControl.title">Time Control</h5>
          <input class="form-control" type="number" id="password" data-translate-placeholder="features.timeControl.placeholder" placeholder="Seconds per view (required)" min="1" max="99999999" required>
          <small class="text-muted" data-translate="features.timeControl.description">Enter viewing duration in seconds</small>
        </div>
        
        <div class="feature-card">
          <i class="fas fa-tag feature-icon"></i>
          <h5 class="feature-title" data-translate="features.description.title">Description</h5>
          <input class="form-control" type="text" id="caption" data-translate-placeholder="features.description.placeholder" placeholder="Add a description (required)" maxlength="100" required>
          <small class="text-muted" data-translate="features.description.description">Enter image description</small>
        </div>
        
        <div class="feature-card">
          <i class="fas fa-magic feature-icon"></i>
          <h5 class="feature-title" data-translate="features.generate.title">Generate Link & QR</h5>
          <button type="button" class="btn btn-primary w-100" onclick="generateImageQR()" disabled id="generateBtn">
            <i class="fas fa-link me-2"></i><span data-translate="features.generate.button">Create Link & QR Code</span>
          </button>
          <small class="text-muted" id="generateBtnStatus" data-translate="features.generate.status">Fill all fields and upload images first</small>
        </div>
      </div>
    </section>

    <!-- Results Section -->
    <section id="results" class="results-section" style="display: none;">
      <div class="text-center mb-4">
        <h2 class="success-title">
          <i class="fas fa-check-circle text-success"></i><br>
          <span data-translate="results.success">QR Code Generated Successfully!</span>
        </h2>
        <p class="success-subtitle" data-translate="results.subtitle">Your image gallery link and QR code are ready to share</p>
      </div>

      <!-- Compact Statistics Cards -->
      <div class="row g-2 mb-3">
        <div class="col-4">
          <div class="stat-card-compact">
            <div class="stat-number-compact" id="fileCount">0</div>
            <div class="stat-label-compact" data-translate="results.stats.images">Images</div>
          </div>
        </div>
        <div class="col-4">
          <div class="stat-card-compact">
            <div class="stat-number-compact" id="viewLimit">∞</div>
            <div class="stat-label-compact" data-translate="results.stats.views">Views</div>
          </div>
        </div>
        <div class="col-4">
          <div class="stat-card-compact">
            <div class="stat-number-compact" id="timeLimit">∞</div>
            <div class="stat-label-compact" data-translate="results.stats.seconds">Seconds</div>
          </div>
        </div>
      </div>

      <!-- Compact Info Cards - Tracking Code moved to top -->
      <div class="row g-2 mb-3">
        <div class="col-md-8">
          <div id="btypesay" class="info-card-compact">
            <!-- Tracking code info will be inserted here -->
          </div>
        </div>
        <div class="col-md-4">
          <div id="atype" class="info-card-compact">
            <!-- Picture link info will be inserted here -->
          </div>
        </div>
      </div>

      <!-- Compact QR and Link Section - QR moved down -->
      <div class="row g-3 mb-3">
        <div class="col-md-7">
          <div class="qr-display-compact">
            <h6 class="mb-2"><i class="fas fa-link me-1"></i><span data-translate="results.shareLink">Share Link</span></h6>
            <div class="input-group input-group-sm mb-2">
              <input type="text" class="form-control" id="webinputpic" readonly placeholder="Generated link will appear here">
              <button class="btn btn-outline-primary btn-sm" type="button" onclick="myFunctionpic()">
                <i class="fas fa-copy"></i>
              </button>
            </div>
            <div id="Copied"></div>
          </div>
        </div>
        <div class="col-md-5">
          <div class="qr-display-compact">
            <h6 class="mb-2"><i class="fas fa-qrcode me-1"></i><span data-translate="results.qrCode">QR Code</span></h6>
            <div id="qrcodewebpic" class="qr-container-compact">
              <p class="text-muted small">QR code will appear here</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Compact Action Buttons -->
      <div class="text-center">
        <button type="button" class="btn btn-success btn-sm me-2" onclick="window.open(document.getElementById('webinputpic').value, '_blank')">
          <i class="fas fa-external-link-alt me-1"></i><span data-translate="results.openGallery">Open Gallery</span>
        </button>
        <button type="button" class="btn btn-secondary btn-sm" onclick="location.reload()">
          <i class="fas fa-plus me-1"></i><span data-translate="results.createAnother">Create Another</span>
        </button>
      </div>
    </section>

    <!-- Tools Section -->
    <section class="tools-section" id="tools">
      <div class="container">
        <div class="text-center mb-5">
          <h2 class="section-title" data-translate="tools.title">Other QR Tools</h2>
          <p class="section-subtitle" data-translate="tools.subtitle">Quick access to other QR code generators</p>
        </div>
        
        <div class="row g-4">
          <div class="col-md-3 col-sm-6">
            <div class="tool-card" data-bs-toggle="modal" data-bs-target="#wifi-modal">
              <div class="tool-icon">
                <i class="fas fa-wifi"></i>
              </div>
              <h5 data-translate="tools.wifi">WiFi QR</h5>
            </div>
          </div>
          
          <div class="col-md-3 col-sm-6">
            <div class="tool-card" data-bs-toggle="modal" data-bs-target="#sms-modal">
              <div class="tool-icon">
                <i class="fas fa-sms"></i>
              </div>
              <h5 data-translate="tools.sms">SMS QR</h5>
            </div>
          </div>
          
          <div class="col-md-3 col-sm-6">
            <div class="tool-card" data-bs-toggle="modal" data-bs-target="#url-modal">
              <div class="tool-icon">
                <i class="fas fa-link"></i>
              </div>
              <h5 data-translate="tools.url">URL QR</h5>
            </div>
          </div>
          
          <div class="col-md-3 col-sm-6">
            <div class="tool-card" data-bs-toggle="modal" data-bs-target="#phone-modal">
              <div class="tool-icon">
                <i class="fas fa-phone"></i>
              </div>
              <h5 data-translate="tools.phone">Phone QR</h5>
            </div>
          </div>
        </div>
      </div>
    </section>
  </div>

  <!-- WiFi QR Code Modal -->
  <div class="modal fade" id="wifi-modal" tabindex="-1" aria-labelledby="wifiModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="wifiModalLabel">
            <i class="fas fa-wifi me-2"></i><span data-translate="modals.wifi.title">WiFi QR Code Generator</span>
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="myInput1" class="form-label" data-translate="modals.wifi.networkName">Network Name (SSID)</label>
            <input type="text" class="form-control" id="myInput1" data-translate-placeholder="modals.wifi.networkPlaceholder" placeholder="Enter WiFi network name">
          </div>
          
          <div class="mb-3">
            <label for="myInput2" class="form-label" data-translate="modals.wifi.securityType">Security Type</label>
            <select class="form-control" id="myInput2">
              <option value="WPA" data-translate="modals.wifi.wpa">WPA/WPA2</option>
              <option value="WEP" data-translate="modals.wifi.wep">WEP</option>
              <option value="nopass" data-translate="modals.wifi.noPassword">No Password</option>
            </select>
          </div>

          <div class="mb-3">
            <label for="myInput3" class="form-label" data-translate="modals.wifi.password">Password</label>
            <input type="password" class="form-control" id="myInput3" data-translate-placeholder="modals.wifi.passwordPlaceholder" placeholder="Enter WiFi password">
          </div>
          
          <button type="button" class="btn btn-primary w-100" onclick="makeCode()">
            <i class="fas fa-qrcode me-2"></i><span data-translate="modals.wifi.generate">Generate WiFi QR Code</span>
          </button>
          
          <div class="mt-4">
            <h6><i class="fas fa-qrcode me-2"></i><span data-translate="modals.common.qrPreview">QR Code Preview</span></h6>
            <div id="qrcode" class="qr-container">
              <p class="text-muted" data-translate="modals.common.qrPlaceholder">Your WiFi QR code will appear here</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- SMS QR Code Modal -->
  <div class="modal fade" id="sms-modal" tabindex="-1" aria-labelledby="smsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="smsModalLabel">
            <i class="fas fa-sms me-2"></i><span data-translate="modals.sms.title">SMS QR Code Generator</span>
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="smsNumber" class="form-label" data-translate="modals.sms.phoneNumber">Phone Number</label>
            <input type="tel" class="form-control" id="smsNumber" data-translate-placeholder="modals.sms.phonePlaceholder" placeholder="Enter phone number">
          </div>
          
          <div class="mb-3">
            <label for="smsContent" class="form-label" data-translate="modals.sms.messageContent">Message Content</label>
            <textarea class="form-control" rows="4" id="smsContent" data-translate-placeholder="modals.sms.messagePlaceholder" placeholder="Enter your message"></textarea>
          </div>
          
          <button type="button" class="btn btn-primary w-100" onclick="makeCode()">
            <i class="fas fa-qrcode me-2"></i><span data-translate="modals.sms.generate">Generate SMS QR Code</span>
          </button>
          
          <div class="mt-4">
            <h6><i class="fas fa-qrcode me-2"></i><span data-translate="modals.common.qrPreview">QR Code Preview</span></h6>
            <div id="smsCode" class="qr-container">
              <p class="text-muted" data-translate="modals.common.qrPlaceholder">Your SMS QR code will appear here</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Phone QR Code Modal -->
  <div class="modal fade" id="phone-modal" tabindex="-1" aria-labelledby="phoneModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="phoneModalLabel">
            <i class="fas fa-phone me-2"></i><span data-translate="modals.phone.title">Phone QR Code Generator</span>
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="telinput" class="form-label" data-translate="modals.phone.phoneNumber">Phone Number</label>
            <input type="tel" class="form-control" id="telinput" data-translate-placeholder="modals.phone.phonePlaceholder" placeholder="Enter phone number">
          </div>
          
          <button type="button" class="btn btn-primary w-100" onclick="makeCodeweb()">
            <i class="fas fa-qrcode me-2"></i><span data-translate="modals.phone.generate">Generate Phone QR Code</span>
          </button>
          
          <div class="mt-4">
            <h6><i class="fas fa-qrcode me-2"></i><span data-translate="modals.common.qrPreview">QR Code Preview</span></h6>
            <div id="qrcodetel" class="qr-container">
              <p class="text-muted" data-translate="modals.common.qrPlaceholder">Your phone QR code will appear here</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- URL QR Code Modal -->
  <div class="modal fade" id="url-modal" tabindex="-1" aria-labelledby="urlModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="urlModalLabel">
            <i class="fas fa-link me-2"></i><span data-translate="modals.url.title">URL QR Code Generator</span>
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="webinput" class="form-label" data-translate="modals.url.websiteUrl">Website URL</label>
            <input type="url" class="form-control" id="webinput" value="https://" data-translate-placeholder="modals.url.urlPlaceholder" placeholder="Enter website URL">
          </div>
          
          <button type="button" class="btn btn-primary w-100" onclick="makeCodeweb()">
            <i class="fas fa-qrcode me-2"></i><span data-translate="modals.url.generate">Generate URL QR Code</span>
          </button>
          
          <div class="mt-4">
            <h6><i class="fas fa-qrcode me-2"></i><span data-translate="modals.common.qrPreview">QR Code Preview</span></h6>
            <div id="qrcodeweb" class="qr-container">
              <p class="text-muted" data-translate="modals.common.qrPlaceholder">Your URL QR code will appear here</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Footer -->
  <footer>
    <div class="container">
      <div class="footer-links mb-3">
        <a href="https://www.maipdf.com">
          <i class="fas fa-home me-1"></i>MaiPDF Home
        </a>
        <a href="https://www.maipdf.com/js/">
          <i class="fas fa-code me-1"></i>Developer Tools
        </a>
      </div>
      <p class="mb-0">
        <i class="fas fa-copyright me-1"></i>2025 MaiPDF - 
        <a href="mailto:admin@maitube.com">admin@maitube.com</a>
      </p>
      <small class="text-muted">Powered by Cloudflare Workers & R2 Storage</small>
    </div>
  </footer>

  <!-- Cloudflare CDN Scripts -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/dropzone.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcode-generator/1.4.4/qrcode.min.js"></script>
  
  <script>
    // Global variables for generated codes
    let generatedTypeA = 'Reader';
    let generatedTypeB = 'Tracker';
    let uploadedFiles = [];
    let currentUploadSessionId = null;

    // Language functionality
    let currentLanguage = 'en';

    // Initialize translations when page loads
    function initializeTranslations() {
      // i18n system is already initialized in i18n.js
      // No need to do anything here
    }

    // Change language function
    function changeLanguage(lang) {
      console.log('Changing language to:', lang); // 添加调试日志
      // Use the global i18n instance from i18n.js
      if (window.i18n) {
        window.i18n.setLanguage(lang);
        currentLanguage = lang;
        
        // 保存语言偏好到 localStorage
        localStorage.setItem('preferred-language', lang);
        
        console.log('Language changed successfully to:', lang);
      } else {
        console.error('i18n instance not found');
      }
    }

    // Update all translations on the page
    function updateTranslations() {
      // This is now handled by i18n.js
      if (window.i18n) {
        window.i18n.updatePageTranslations();
      }
    }

    // Update placeholder texts
    function updatePlaceholders() {
      // This is now handled by i18n.js
      if (window.i18n) {
        window.i18n.updatePageTranslations();
      }
    }

    // Get translation for a specific key and language
    function getTranslation(key, lang) {
      // Use the global i18n instance
      if (window.i18n) {
        return window.i18n.t(key);
      }
      return key; // fallback
    }

    // 可逆复杂编码系统
    class ReversibleEncoder {
      constructor() {
        // 自定义字符集 (避免易混淆字符 0, O, 1, I, l)
        this.charset = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789abcdefghjkmnpqrstuvwxyz';
        this.base = this.charset.length; // 58
        
        // 固定密钥 (可以根据需要修改)
        this.secretKey = 0x5A5A5A5A; // 异或密钥
        
        // 字符替换映射 (增加复杂度)
        this.charMap = {
          'A': 'X', 'B': 'Y', 'C': 'Z', 'D': 'a', 'E': 'b',
          'F': 'c', 'G': 'd', 'H': 'e', 'J': 'f', 'K': 'g',
          'L': 'h', 'M': 'j', 'N': 'k', 'P': 'm', 'Q': 'n',
          'R': 'p', 'S': 'q', 'T': 'r', 'U': 's', 'V': 't',
          'W': 'u', 'X': 'v', 'Y': 'w', 'Z': 'x', '2': 'y',
          '3': 'z', '4': 'A', '5': 'B', '6': 'C', '7': 'D',
          '8': 'E', '9': 'F', 'a': 'G', 'b': 'H', 'c': 'J',
          'd': 'K', 'e': 'L', 'f': 'M', 'g': 'N', 'h': 'P',
          'j': 'Q', 'k': 'R', 'm': 'S', 'n': 'T', 'p': 'U',
          'q': 'V', 'r': 'W', 's': '2', 't': '3', 'u': '4',
          'v': '5', 'w': '6', 'x': '7', 'y': '8', 'z': '9'
        };
        
        // 反向映射
        this.reverseCharMap = {};
        for (let [key, value] of Object.entries(this.charMap)) {
          this.reverseCharMap[value] = key;
        }
      }
      
      // 计算校验位
      calculateChecksum(str) {
        let sum = 0;
        for (let i = 0; i < str.length; i++) {
          sum += str.charCodeAt(i) * (i + 1);
        }
        return this.charset[sum % this.base];
      }
      
      // 验证校验位
      verifyChecksum(str) {
        if (str.length < 2) return false;
        const checksum = str[str.length - 1];
        const data = str.slice(0, -1);
        return this.calculateChecksum(data) === checksum;
      }
      
      // Base58 编码
      toBase58(num) {
        if (num === 0) return this.charset[0];
        
        let result = '';
        while (num > 0) {
          result = this.charset[num % this.base] + result;
          num = Math.floor(num / this.base);
        }
        return result;
      }
      
      // Base58 解码
      fromBase58(str) {
        let result = 0;
        let power = 1;
        
        for (let i = str.length - 1; i >= 0; i--) {
          const index = this.charset.indexOf(str[i]);
          if (index === -1) throw new Error('Invalid character in encoded string');
          result += index * power;
          power *= this.base;
        }
        return result;
      }
      
      // 字符替换
      substituteChars(str) {
        return str.split('').map(char => this.charMap[char] || char).join('');
      }
      
      // 字符还原
      restoreChars(str) {
        return str.split('').map(char => this.reverseCharMap[char] || char).join('');
      }
      
      // 位置打散 (简单的奇偶位交换)
      scramblePositions(str) {
        const chars = str.split('');
        const result = [];
        
        // 先放奇数位
        for (let i = 1; i < chars.length; i += 2) {
          result.push(chars[i]);
        }
        // 再放偶数位
        for (let i = 0; i < chars.length; i += 2) {
          result.push(chars[i]);
        }
        
        return result.join('');
      }
      
      // 位置还原
      unscramblePositions(str) {
        const chars = str.split('');
        const result = new Array(chars.length);
        const half = Math.ceil(chars.length / 2);
        
        let oddIndex = 0, evenIndex = 0;
        
        for (let i = 0; i < chars.length; i++) {
          if (i % 2 === 1) {
            result[i] = chars[oddIndex++];
          } else {
            result[i] = chars[half + evenIndex++];
          }
        }
        
        return result.join('');
      }
      
      // 编码主函数
      encode(autoId) {
        try {
          // 1. 异或加密
          const encrypted = autoId ^ this.secretKey;
          
          // 2. Base58 编码
          const base58 = this.toBase58(encrypted);
          
          // 3. 字符替换
          const substituted = this.substituteChars(base58);
          
          // 4. 位置打散
          const scrambled = this.scramblePositions(substituted);
          
          // 5. 添加校验位
          const checksum = this.calculateChecksum(scrambled);
          const final = scrambled + checksum;
          
          return final;
          
        } catch (error) {
          console.error('编码错误:', error);
          return null;
        }
      }
      
      // 解码主函数
      decode(encodedStr) {
        try {
          // 1. 验证校验位
          if (!this.verifyChecksum(encodedStr)) {
            throw new Error('校验位验证失败');
          }
          
          // 2. 移除校验位
          const withoutChecksum = encodedStr.slice(0, -1);
          
          // 3. 位置还原
          const unscrambled = this.unscramblePositions(withoutChecksum);
          
          // 4. 字符还原
          const restored = this.restoreChars(unscrambled);
          
          // 5. Base58 解码
          const base58Decoded = this.fromBase58(restored);
          
          // 6. 异或解密
          const decrypted = base58Decoded ^ this.secretKey;
          
          return decrypted;
          
        } catch (error) {
          console.error('解码错误:', error);
          return null;
        }
      }
    }

    // 创建全局编码器实例
    const trackingEncoder = new ReversibleEncoder();

    // QR Code generation function
    function createQRCode(elementId, text, size = 170) {
      const element = document.getElementById(elementId);
      element.innerHTML = ''; // Clear existing content
      
      if (!text || text.trim() === '') {
        element.innerHTML = '<p class="text-muted">Enter information above to generate QR code</p>';
        return;
      }
      
      try {
        const qr = qrcode(0, 'M');
        qr.addData(text);
        qr.make();
        
        const qrImage = qr.createImgTag(4, 8);
        element.innerHTML = qrImage;
        
        // Style the QR code
        const img = element.querySelector('img');
        if (img) {
          img.style.width = size + 'px';
          img.style.height = size + 'px';
          img.style.border = '1px solid #ddd';
          img.style.borderRadius = '8px';
          img.style.boxShadow = '0 4px 8px rgba(0,0,0,0.1)';
        }
      } catch (error) {
        element.innerHTML = '<p class="text-danger">Error generating QR code</p>';
        console.error('QR code generation error:', error);
      }
    }

    // WiFi and SMS QR Code generation
    function makeCode() {
      const elText1 = document.getElementById("myInput1");
      const elText2 = document.getElementById("myInput2");
      const elText3 = document.getElementById("myInput3");
      const textnumber = document.getElementById("smsNumber");
      const textcontent = document.getElementById("smsContent");
      
      // WiFi QR Code
      if (elText1 && elText1.value.trim()) {
        const elText = `WIFI:S:${elText1.value};T:${elText2.value};P:${elText3.value};;`;
        createQRCode("qrcode", elText);
      }
      
      // SMS QR Code
      if ((textnumber && textnumber.value.trim()) || (textcontent && textcontent.value.trim())) {
        const smstotal = `smsto:${textnumber.value}:${textcontent.value}`;
        createQRCode("smsCode", smstotal);
      }
    }

    // Web, Tel, and Picture QR Code generation
    function makeCodeweb() {
      const tel = document.getElementById("telinput");
      const web = document.getElementById("webinput");
      const webpic = document.getElementById("webinputpic");
      
      if (web && web.value && web.value !== "https://") {
        createQRCode("qrcodeweb", web.value);
      }
      
      if (webpic && webpic.value) {
        createQRCode("qrcodewebpic", webpic.value);
      }
      
      if (tel && tel.value.trim()) {
        createQRCode("qrcodetel", `tel:${tel.value}`);
      }
    }

    // Generate Image QR Code
    async function generateImageQR() {
      if (uploadedFiles.length === 0) {
        showNotification('Please upload at least one image first!', 'warning');
        return;
      }

      const limit = document.getElementById("limit").value || "100000000";
      const password = document.getElementById("password").value || "1999999927";
      const caption = document.getElementById("caption").value || "Image Gallery";

      // Show loading state
      const button = event.target;
      const originalText = button.innerHTML;
      button.innerHTML = '<span class="loading"></span> Generating...';
      button.disabled = true;

      try {
        // Call Cloudflare Worker API to create database entry
        const response = await fetch('https://fetch.maipdf.com/api/create-image-link', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            files: uploadedFiles,
            limit: Math.min(parseInt(limit), 99999999),
            password: Math.min(parseInt(password), 99999999),
            caption: caption
          })
        });

        const result = await response.json();
        
        if (result.success) {
          // 使用新的可逆复杂编码算法
          const autoId = result.autoId;
          
          // 生成 Type A (查看链接) - 保持简单编码
          const identifier = autoId.toString();
          const arr1 = identifier.split('');
          const arrayA = [];
          
          arr1.forEach((digit, i) => {
            let value = parseInt(digit);
            if (value === 0) value = 10;
            arrayA[i] = String.fromCharCode(64 + value); // A=1, B=2, ..., J=10
          });
          
          generatedTypeA = arrayA.join('');
          
          // 生成 Type B (追踪代码) - 使用复杂编码
          generatedTypeB = trackingEncoder.encode(autoId);
          
          // Update share link input
          document.getElementById("webinputpic").value = `https://maiimg.com/pic/${generatedTypeA}`;

          // Update stats display
          document.getElementById("fileCount").textContent = result.fileCount;
          document.getElementById("viewLimit").textContent = result.limit === 100000000 ? '∞' : result.limit;
          document.getElementById("timeLimit").textContent = result.password === 1999999927 ? '∞' : result.password;

          // Update information links
          document.getElementById("atype").innerHTML = `
            <div class="alert alert-info">
              <strong><i class="fas fa-link me-2"></i>Picture Link:</strong><br>
              <a href="https://maiimg.com/pic/${generatedTypeA}" target="_blank" class="text-decoration-none">
                https://maiimg.com/pic/${generatedTypeA}
              </a>
              <br><small class="text-muted">Auto ID: ${result.autoId} | Files: ${result.fileCount}</small>
            </div>
          `;

          // Update tracking code information
          document.getElementById("btypesay").innerHTML = `
            <h6 class="mb-2"><i class="fas fa-chart-line me-1"></i>Tracking Code</h6>
            <div class="mb-2">
              <strong>Code:</strong> <span class="badge bg-primary">${generatedTypeB}</span>
            </div>
            <div class="mb-2">
              <strong>Tracking Link:</strong><br>
              <a href="https://maiimg.com/maiimg/tracking.html?id=${generatedTypeB}" target="_blank" class="text-decoration-none text-primary">
                <i class="fas fa-external-link-alt me-1"></i>Open Tracking Page
              </a>
            </div>
            <small class="text-muted">Use this code to track views and analytics</small>
          `;

          // Generate QR code for the share link
          makeCodeweb();

          // Show results section
          document.getElementById("results").style.display = 'block';
          
          // Scroll to results section
          document.getElementById("results").scrollIntoView({ behavior: 'smooth' });
          
          showNotification(`✅ QR code generated successfully! Database ID: ${result.autoId}`, 'success');
          
        } else {
          showNotification('Error creating image link: ' + (result.error || 'Unknown error'), 'error');
        }
      } catch (error) {
        showNotification('Network error creating image link. Please check your connection and try again.', 'error');
      } finally {
        // Restore button state
        button.innerHTML = originalText;
        button.disabled = false;
      }
    }

    // Copy function with modern clipboard API
    async function myFunctionpic() {
      const copyText = document.getElementById("webinputpic");
      
      try {
        await navigator.clipboard.writeText(copyText.value);
        document.getElementById("Copied").innerHTML = '<span class="copy-success"><i class="fas fa-check me-1"></i>Copied to clipboard!</span>';
        setTimeout(() => {
          document.getElementById("Copied").innerHTML = "";
        }, 3000);
      } catch (err) {
        // Fallback for older browsers
        copyText.select();
        copyText.setSelectionRange(0, 99999);
        document.execCommand("copy");
        document.getElementById("Copied").innerHTML = '<span class="copy-success"><i class="fas fa-check me-1"></i>Copied!</span>';
        setTimeout(() => {
          document.getElementById("Copied").innerHTML = "";
        }, 3000);
      }
    }

    // Show notification function
    function showNotification(message, type = 'info') {
      const notification = document.createElement('div');
      notification.className = `alert alert-${type === 'error' ? 'danger' : type} alert-dismissible fade show position-fixed`;
      notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
      notification.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      `;
      
      document.body.appendChild(notification);
      
      // Auto dismiss after 5 seconds
      setTimeout(() => {
        if (notification.parentElement) {
          notification.remove();
        }
      }, 5000);
    }

    // Update button state based on form validation and uploaded files
    function updateGenerateButton() {
      const generateBtn = document.getElementById('generateBtn');
      const generateBtnStatus = document.getElementById('generateBtnStatus');
      const limitInput = document.getElementById('limit');
      const passwordInput = document.getElementById('password');
      const captionInput = document.getElementById('caption');
      
      // Check if all required fields are filled
      const hasLimit = limitInput.value.trim() !== '';
      const hasPassword = passwordInput.value.trim() !== '';
      const hasCaption = captionInput.value.trim() !== '';
      const hasFiles = uploadedFiles.length > 0;
      
      // Enable button only if all conditions are met
      if (hasLimit && hasPassword && hasCaption && hasFiles) {
        generateBtn.disabled = false;
        generateBtn.innerHTML = '<i class="fas fa-link me-2"></i>Create Link & QR Code';
        generateBtnStatus.textContent = 'Ready to generate link and QR code';
        generateBtnStatus.className = 'text-success';
      } else {
        generateBtn.disabled = true;
        generateBtn.innerHTML = '<i class="fas fa-link me-2"></i>Create Link & QR Code';
        
        // Show specific missing requirements
        let missing = [];
        if (!hasLimit) missing.push('view limit');
        if (!hasPassword) missing.push('time control');
        if (!hasCaption) missing.push('description');
        if (!hasFiles) missing.push('images');
        
        generateBtnStatus.textContent = `Missing: ${missing.join(', ')}`;
        generateBtnStatus.className = 'text-muted';
      }
    }

    // Update upload status function
    function updateUploadStatus(message) {
      const statusElement = document.getElementById('pleaseupload');
      if (statusElement) {
        statusElement.textContent = message;
      }
    }

    // Initialize Dropzone for image upload
    document.addEventListener('DOMContentLoaded', function() {
      // Disable auto discovery
      Dropzone.autoDiscover = false;
      
      const myDropzone = new Dropzone("#dropz", {
        url: "https://fetch.maipdf.com/api/upload-image",
        method: "post",
        paramName: "file",
        maxFiles: 9,
        maxFilesize: 50, // 50MB
        acceptedFiles: ".png,.jpg,.jpeg,.gif,.webp,image/*",
        addRemoveLinks: true,
        parallelUploads: 3,
        clickable: true, // 确保可以点击
        createImageThumbnails: false, // 禁用缩略图以避免点击冲突
        dictDefaultMessage: '<i class="fas fa-cloud-upload-alt upload-icon"></i><div class="upload-text">Drop images here or click to upload</div><div class="upload-subtext">Supports: PNG, JPG, JPEG, GIF, WebP • Max 50MB each • Up to 9 files</div>',
        dictMaxFilesExceeded: "Maximum 9 files allowed!",
        dictResponseError: 'Upload failed!',
        dictInvalidFileType: "Only image files are allowed.",
        dictFallbackMessage: "Your browser does not support drag and drop uploads.",
        dictFileTooBig: "File is too big ({{filesize}}MB). Max filesize: {{maxFilesize}}MB.",
        dictRemoveFile: "Remove file",
        dictCancelUpload: "Cancel upload",
        timeout: 300000, // 5 minutes timeout
        
        init: function() {
          const dropzone = this;
          
          // 确保整个dropzone区域都可以点击
          this.element.style.cursor = 'pointer';
          
          // 移除任何可能阻止点击的事件监听器
          this.element.addEventListener('click', function(e) {
            // 确保点击事件可以正常传播
            if (!e.target.closest('.dz-remove') && !e.target.closest('.dz-details')) {
              dropzone.hiddenFileInput.click();
            }
          });
          
          this.on("addedfile", function(file) {
            updateUploadStatus(`Added: ${file.name}`);
            
            // 确保文件预览区域不会阻止点击
            const previewElement = file.previewElement;
            if (previewElement) {
              previewElement.style.pointerEvents = 'auto';
            }
          });
          
          this.on("sending", function(file, xhr, formData) {
            updateUploadStatus(`Uploading: ${file.name}...`);
            
            // Generate session ID if not exists
            if (!currentUploadSessionId) {
              currentUploadSessionId = 'img_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
            }
            
            // Add session ID to form data
            formData.append("sessionId", currentUploadSessionId);
          });
          
          this.on("success", function(file, response) {
            try {
              const result = typeof response === 'string' ? JSON.parse(response) : response;
              
              if (result.success) {
                // Add to uploaded files array with all necessary fields
                uploadedFiles.push({
                  filename: result.filename,
                  originalName: file.name,
                  size: file.size,
                  url: result.url,
                  directory: result.directory || currentUploadSessionId,
                  uploadSessionId: currentUploadSessionId
                });
                
                updateUploadStatus(`✅ Uploaded: ${file.name}`);
                updateGenerateButton(); // Update button state when files are uploaded
                
              } else {
                updateUploadStatus(`❌ Failed: ${file.name} - ${result.error}`);
              }
            } catch (error) {
              updateUploadStatus(`❌ Error processing: ${file.name}`);
            }
          });
          
          this.on("error", function(file, errorMessage) {
            updateUploadStatus(`❌ Error: ${file.name} - ${errorMessage}`);
          });
          
          this.on("removedfile", function(file) {
            // Remove from uploaded files array
            uploadedFiles = uploadedFiles.filter(f => f.originalName !== file.name);
            updateUploadStatus(`Removed: ${file.name}`);
            updateGenerateButton(); // Update button state when files are removed
          });
          
          this.on("queuecomplete", function() {
            updateUploadStatus(`Ready! ${uploadedFiles.length} files uploaded`);
          });
        }
      });

      // Add real-time validation listeners
      ['limit', 'password', 'caption'].forEach(fieldId => {
        const field = document.getElementById(fieldId);
        if (field) {
          field.addEventListener('input', updateGenerateButton);
          field.addEventListener('blur', updateGenerateButton);
        }
      });

      // WiFi form listeners
      ["myInput1", "myInput2", "myInput3"].forEach(id => {
        const element = document.getElementById(id);
        if (element) {
          element.addEventListener("input", makeCode);
          element.addEventListener("keydown", function(e) {
            if (e.key === 'Enter') makeCode();
          });
        }
      });

      // SMS form listeners
      ["smsNumber", "smsContent"].forEach(id => {
        const element = document.getElementById(id);
        if (element) {
          element.addEventListener("input", makeCode);
          element.addEventListener("keydown", function(e) {
            if (e.key === 'Enter') makeCode();
          });
        }
      });

      // Other form listeners
      ["webinput", "telinput"].forEach(id => {
        const element = document.getElementById(id);
        if (element) {
          element.addEventListener("input", makeCodeweb);
          element.addEventListener("keydown", function(e) {
            if (e.key === 'Enter') makeCodeweb();
          });
        }
      });

      // Initialize empty QR codes
      createQRCode("qrcode", "");
      createQRCode("smsCode", "");
      createQRCode("qrcodeweb", "");
      createQRCode("qrcodetel", "");
      createQRCode("qrcodewebpic", "");

      // Initial button state check
      updateGenerateButton();

      // Initialize translations
      initializeTranslations();
      
      // Load saved language preference
      const savedLanguage = localStorage.getItem('preferred-language');
      if (savedLanguage && (savedLanguage === 'en' || savedLanguage === 'zh')) {
        changeLanguage(savedLanguage);
      }

      // Smooth scrolling for navigation links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const href = this.getAttribute('href');
          if (href && href !== '#') {
            const target = document.querySelector(href);
            if (target) {
              target.scrollIntoView({ behavior: 'smooth' });
            }
          }
        });
      });
    });
  </script>
</body>
</html>